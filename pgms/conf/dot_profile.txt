#!/bin/sh
# .profile - Bourne shell init script

# set the default file creation mask to something reasonably safe

umask 022

# set the PATH to directories where binaries are usually located

PATH=/bin:/sbin:/usr/bin:/usr/sbin:/opt/local/bin:/opt/local/sbin
PATH=$PATH:/usr/X11R6/bin:/usr/local/bin:/usr/local/sbin
PATH=$PATH:/usr/local/zfs/bin:$HOME/bin
export PATH

case $- in

    # interactive shell startup
    
    *i*)

        HOST="`uname -n | sed -e 's/\..*$//' | tr 'A-Z' 'a-z'`"

        # default prompt
    
        PS1="$HOST$ "
        PS2="> "

        # change the prompt if running as root (e.g. via sudo)

        if [ X"$EUID" = X"0" ] ; then
            PS1="$HOST# "
            PS2="#> "
        fi

        # include our home directory and our documents folder
        # in the CDPATH
    
        CDPATH=".:$HOME:$HOME/Documents:$HOME/Documents/src"

        # default the editor to vi
    
        EDITOR="vi"
        VISUAL="$EDITOR"
        FCEDIT="$EDITOR"

        # if less is available, use it as our pager, otherwise
        # default to more
    
        PAGER="more"
        if type less > /dev/null 2>&1 ; then
            PAGER="less"
        fi
    
        export PS1 PS2 PAGER EDITOR VISUAL FCEDIT CDPATH
    
        # set bash and ksh specific options

        case "$0" in
            *bash*)
                set -o emacs notify ignoreeof noclobber
                ;;
            *ksh*)

                set -o emacs
               
                # additional option, may not be available on
                # all ksh versions

                set -o notify >/dev/null 2>&1
                set -o ignoreeof >/dev/null 2>&1
                set -o noclobber >/dev/null 2>&1
  
                # bash style tab completion for pdksh
                # in emacs mode

                if type bind > /dev/null 2>&1 ; then 
                   bind "^I=complete"
                   bind "^I^I=complete-list"
                fi

                if [ -r "$HOME/.kshrc" ] ; then
                   ENV="$HOME/.kshrc"
                   export ENV
                fi
                ;;
        esac

        # create some safety functions

        cp () { /bin/cp -i "$@" ; }
        mv () { /bin/mv -i "$@" ; }
        rm () { /bin/rm -i "$@" ; }
        ls () { /bin/ls -aFC "$@" ; }
        yes() { echo "yes" ; }
        y()   { echo "y" ; }

        # define aliases (if alias is available)

        if type alias > /dev/null 2>&1 ; then

            # run bc with -l option to load the math 
            # library so that we get floating point 
            # math, instead of just integer math

            alias bc="bc -l" ;

        fi

        ;;
esac

# look for and load a local shell startup files

if [ -r "$HOME/.profile_local" ] ; then
    . "$HOME/.profile_local"
fi

